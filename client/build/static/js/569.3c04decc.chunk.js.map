{"version":3,"file":"static/js/569.3c04decc.chunk.js","mappings":"8RAKaA,GAA0BC,EAAAA,EAAAA,IAAOC,EAAAA,EAAAA,IAAPD,CAAH,+jBAoCvBE,EAAQF,EAAAA,GAAAA,IAAH,oKAMI,gBAAGG,EAAH,EAAGA,SAAH,oBAAyBA,EAAzB,QAGTC,GAAYJ,EAAAA,EAAAA,IAAOK,EAAAA,QAAPL,CAAH,4YA0BTM,IALeN,EAAAA,EAAAA,IAAOO,EAAAA,EAAPP,CAAH,yDAKgBA,EAAAA,GAAAA,IAAH,iIAQzBQ,EAAOR,EAAAA,GAAAA,KAAH,+DAKJS,EAAQT,EAAAA,GAAAA,KAAH,+DCzFLU,EAAyB,CACpCC,QAAS,CACPC,EAAG,EACHC,QAAS,EACTC,WAAY,CACVC,KAAM,WAGVC,OAAQ,CACNJ,EAAG,GACHC,QAAS,GAEXI,KAAM,CACJL,GAAI,GACJC,QAAS,I,SC2Db,EAtDuB,SAAC,GAA0B,IAAxBK,EAAuB,EAAvBA,KAAuB,IAAjBC,MAAAA,OAAiB,MAAT,GAAS,EACvCC,EAA0BF,EAA1BE,KAAMC,EAAoBH,EAApBG,MAAOlB,EAAae,EAAbf,SACrB,GAAkCmB,EAAAA,EAAAA,WAAS,GAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,UAAC/B,EAAD,CACEgC,SAAUrB,EACVsB,QAAQ,SACRC,QAAQ,UACRhB,KAAK,OACLiB,QAAS,kBACPT,EAAS,GAAD,OACHE,EAASQ,SADN,YACkBhB,GAASA,EAAMiB,cAAgB,KADjD,OACuDlB,EAAKmB,MAGtEC,aAAc,kBAAMd,GAAa,IACjCe,WAAY,kBAAMf,GAAa,IAXjC,WAaE,SAACtB,EAAD,CAAOsC,UAAU,QAAQrC,SAAUA,KACnC,UAACG,EAAD,CAA2BkC,UAAU,oBAArC,WACE,SAAChC,EAAD,UAAOY,KACP,UAACX,EAAD,WAAQY,EAAR,WAEF,SAACoB,EAAA,EAAD,CAAiBT,SAAS,EAA1B,SACGT,IACC,SAACnB,EAAD,CAEEsC,WAAY,CAAEC,MAAO,MACrBC,SAAU,CAAED,MAAO,KACnBX,QAAS,CAAEpB,GAAI,GAAIC,QAAS,GAC5BoB,QAAS,CACPrB,EAAGW,EAAY,EAAI,GACnBV,QAAS,EACTC,WAAY,CAAEC,KAAM,SAAU8B,UAAW,IAAKC,QAAS,KAEzD7B,KAAM,CACJL,EAAG,GACHC,QAAS,EACTC,WAAY,CAAEC,KAAM,SAAU8B,UAAW,IAAKC,QAAS,KAEzDZ,QAAS,kBAAML,GAASkB,EAAAA,EAAAA,IAAQ7B,KAflC,wBACM,iB,yIC7CV8B,GAAeC,EAAAA,EAAAA,IAAH,uLAWZC,GAAuBD,EAAAA,EAAAA,IAAH,uLAWpBE,GAAqBF,EAAAA,EAAAA,IAAH,0IAcXG,GAAwBpD,EAAAA,EAAAA,IAAOC,EAAAA,EAAAA,OAAPD,CAAH,mgBALV,SAACqD,GACvB,OAAIA,EAAMC,aAAqBH,EACxBE,EAAME,SAAWL,EAAuBF,K,wBCtBjD,EAVqB,SAAC,GAAgC,IAA9BQ,EAA6B,EAA7BA,SAAaC,GAAgB,YACnD,OACE,SAACL,GAAD,kBACMK,GADN,aAGGD","sources":["components/collection-item/collection-item.styles.js","components/collection-item/collection-item.variants.js","components/collection-item/collection-item.component.js","components/custom-bottom/custom-button.styles.js","components/custom-bottom/custom-button.component.js"],"sourcesContent":["import styled from \"styled-components\";\nimport CustomButton from \"../custom-bottom/custom-button.component\";\nimport { ReactComponent as ShoppingIcon } from \"../../assets/shopping-bag.svg\";\nimport { motion } from \"framer-motion\";\n\nexport const CollectionItemContainer = styled(motion.div)`\n  cursor: pointer;\n  width: 22vw;\n  display: flex;\n  flex-direction: column;\n  height: 350px;\n  align-items: center;\n  position: relative;\n  &:hover {\n    .image {\n      opacity: 0.8;\n    }\n    button {\n      opacity: 0.85;\n    }\n  }\n\n  @media screen and (max-width: 800px) {\n    width: 40vw;\n\n    &:hover {\n      .image {\n        opacity: unset;\n      }\n      button {\n        opacity: unset;\n      }\n    }\n  }\n  @media screen and (max-width: 440px) {\n    width: 45vw;\n    height: 250px;\n    margin-bottom: 1rem;\n  }\n`;\n\nexport const Image = styled.div`\n  width: 100%;\n  height: 95%;\n  background-size: cover;\n  background-position: center;\n  margin-bottom: 5px;\n  background-image: ${({ imageUrl }) => `url(${imageUrl})`};\n`;\n\nexport const AddButton = styled(CustomButton)`\n  width: 80%;\n  opacity: 0.7;\n  position: absolute;\n  top: 75%;\n  border-radius: 2rem;\n  padding: 0.5rem 1rem;\n  width: 70%;\n  @media screen and (max-width: 800px) {\n    opacity: 0.9;\n    min-width: unset;\n    padding: 0.2 0.4rem;\n    top: 80%;\n    height: 2.5rem;\n    font-size: 1rem;\n  }\n  @media screen and (max-width: 440px) {\n    display: none;\n  }\n`;\n\nexport const IconShopping = styled(ShoppingIcon)`\n  width: 20px;\n  height: 20px;\n`;\n\nexport const CollectionFooterContainer = styled.div`\n  width: 100%;\n  height: 5%;\n  display: flex;\n  justify-content: space-between;\n  font-size: 18px;\n`;\n\nexport const Name = styled.span`\n  width: 90%;\n  margin-bottom: 15px;\n`;\n\nexport const Price = styled.span`\n  width: 10%;\n  margin-bottom: 15px;\n`;\n","export const CollectionItemVariants = {\n  visible: {\n    y: 0,\n    opacity: 1,\n    transition: {\n      type: \"spring\",\n    },\n  },\n  hidden: {\n    y: 50,\n    opacity: 0,\n  },\n  exit: {\n    y: -50,\n    opacity: 0,\n  },\n};\n","import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { AnimatePresence } from \"framer-motion\";\n\nimport { useNavigate, useLocation } from \"react-router-dom\";\n\nimport { addItem } from \"../../redux/cart/cart.actions\";\n\nimport {\n  CollectionItemContainer,\n  Image,\n  CollectionFooterContainer,\n  Name,\n  Price,\n  AddButton,\n} from \"./collection-item.styles\";\n\nimport { CollectionItemVariants } from \"./collection-item.variants\";\n\nconst CollectionItem = ({ item, title = \"\" }) => {\n  const { name, price, imageUrl } = item;\n  const [isHovered, setIsHovered] = useState(false);\n  const navigate = useNavigate();\n  const location = useLocation();\n  const dispatch = useDispatch();\n\n  return (\n    <CollectionItemContainer\n      variants={CollectionItemVariants}\n      initial='hidden'\n      animate='visible'\n      exit='exit'\n      onClick={() =>\n        navigate(\n          `${location.pathname}/${title && title.toLowerCase() + \"/\"}${item.id}`\n        )\n      }\n      onHoverStart={() => setIsHovered(true)}\n      onHoverEnd={() => setIsHovered(false)}\n    >\n      <Image className='image' imageUrl={imageUrl} />\n      <CollectionFooterContainer className='collection-footer'>\n        <Name>{name}</Name>\n        <Price>{price}$</Price>\n      </CollectionFooterContainer>\n      <AnimatePresence initial={false}>\n        {isHovered && (\n          <AddButton\n            key='button'\n            whileHover={{ scale: 1.03 }}\n            whileTap={{ scale: 0.98 }}\n            initial={{ y: -30, opacity: 0 }}\n            animate={{\n              y: isHovered ? 0 : 30,\n              opacity: 1,\n              transition: { type: \"spring\", stiffness: 700, damping: 70 },\n            }}\n            exit={{\n              y: 30,\n              opacity: 0,\n              transition: { type: \"spring\", stiffness: 700, damping: 70 },\n            }}\n            onClick={() => dispatch(addItem(item))}\n          >\n            Add to cart\n          </AddButton>\n        )}\n      </AnimatePresence>\n    </CollectionItemContainer>\n  );\n};\n\n\nexport default CollectionItem;\n","import styled, { css } from \"styled-components\";\nimport { motion } from \"framer-motion\";\n\nconst buttonStyles = css`\n  background-color: black;\n  color: white;\n  border: none;\n  &:hover {\n    background-color: white;\n    color: black;\n    border: 1px solid black;\n  }\n`;\n\nconst invertedButtonStyles = css`\n  background-color: white;\n  color: black;\n  border: 1px solid black;\n  &:hover {\n    background-color: black;\n    color: white;\n    border: none;\n  }\n`;\n\nconst GoogleSignInStyles = css`\n  background-color: #4285f4;\n  color: white;\n  border: none;\n  &:hover {\n    background-color: #357ae8;\n  }\n`;\n\nconst getButtonStyles = (props) => {\n  if (props.googleSignIn) return GoogleSignInStyles;\n  return props.inverted ? invertedButtonStyles : buttonStyles;\n};\n\nexport const CustomButtonContainer = styled(motion.button)`\n  min-width: 165px;\n  width: auto;\n  height: 50px;\n  letter-spacing: 0.5px;\n  line-height: 50px;\n  padding: 0 35px 0 35px;\n  font-size: 15px;\n  text-transform: uppercase;\n  font-family: \"Open Sans Condensed\";\n  font-weight: bolder;\n  cursor: pointer;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  ${getButtonStyles}\n  @media screen and (max-width: 800px) {\n    height: 60px;\n    font-size: 18px;\n    line-height: 30px;\n    width: 100%;\n    padding: 0 25px;\n  }\n`;\n","import React from \"react\";\n\nimport { CustomButtonContainer } from \"./custom-button.styles\";\n\nconst CustomButton = ({ children, ...restProps }) => {\n  return (\n    <CustomButtonContainer\n      {...restProps}\n    >\n      {children}\n    </CustomButtonContainer>\n  );\n};\n\nexport default CustomButton;\n"],"names":["CollectionItemContainer","styled","motion","Image","imageUrl","AddButton","CustomButton","CollectionFooterContainer","ShoppingIcon","Name","Price","CollectionItemVariants","visible","y","opacity","transition","type","hidden","exit","item","title","name","price","useState","isHovered","setIsHovered","navigate","useNavigate","location","useLocation","dispatch","useDispatch","variants","initial","animate","onClick","pathname","toLowerCase","id","onHoverStart","onHoverEnd","className","AnimatePresence","whileHover","scale","whileTap","stiffness","damping","addItem","buttonStyles","css","invertedButtonStyles","GoogleSignInStyles","CustomButtonContainer","props","googleSignIn","inverted","children","restProps"],"sourceRoot":""}