{"version":3,"file":"static/js/709.e3d5c459.chunk.js","mappings":"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","sources":["pages/checkout/checkout.styles.js","pages/checkout/checkout.component.js","../node_modules/framer-motion/dist/es/utils/use-is-mounted.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/PresenceChild.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/index.mjs","../node_modules/framer-motion/dist/es/utils/use-force-update.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/utils/use-id.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/utils/use-unmount-effect.mjs","../node_modules/framesync/dist/es/on-next-frame.mjs","../node_modules/framesync/dist/es/index.mjs","../node_modules/framesync/dist/es/create-render-step.mjs"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const CheckoutPageContainer = styled.div`\n  width: 55%;\n  min-height: 90vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin: 50px auto 0;\n  button {\n    margin-left: auto;\n  }\n  @media screen and (max-width: 800px) {\n    width: 90%;\n  }\n`;\n\nexport const CheckoutHeaderContainer = styled.div`\n  width: 100%;\n  padding: 10px 0;\n  display: flex;\n  justify-content: space-between;\n  border-bottom: 1px solid darkgrey;\n`;\n\nexport const HeaderBlock = styled.div`\n  text-transform: capitalize;\n  width: 23%;\n\n  &:last-child {\n    width: 8%;\n  }\n  @media screen and (max-width: 800px) {\n    width: 21%;\n    &:last-child {\n      width: 14%;\n    }\n  }\n`;\n\nexport const Total = styled.div`\n  margin-top: 30px;\n  margin-left: auto;\n  font-size: 36px;\n`;\n\nexport const TestWarningContainer = styled.div`\n  text-align: center;\n  margin-top: 40px;\n  font-size: 24px;\n  color: red;\n`;\n\nexport const Line = styled.div`\n  border-bottom: 1px solid darkgrey;\n  width: 100%;\n`;\n","import React, { lazy, Suspense } from \"react\";\nimport { AnimatePresence } from \"framer-motion\";\n\nimport { useSelector } from \"react-redux\";\nimport {\n  selectCartItems,\n  selectCartTotal,\n} from \"../../redux/cart/cart.selectors\";\n\nimport {\n  CheckoutPageContainer,\n  CheckoutHeaderContainer,\n  HeaderBlock,\n  Total,\n  TestWarningContainer,\n  Line,\n} from \"./checkout.styles\";\n\nimport Spinner from \"../../components/spinner/spinner.component\";\n\nconst CheckoutItem = lazy(() =>\n  import(\"../../components/checkout-item/checkout-item.component\")\n);\nconst StripeCheckoutButton = lazy(() =>\n  import(\"../../components/stripe-button/stripe-button.component\")\n);\n\nconst CheckoutPage = () => {\n  const cartItems = useSelector(selectCartItems);\n  const total = useSelector(selectCartTotal);\n\n  return (\n    <CheckoutPageContainer>\n      <Suspense fallback={<Spinner />}>\n        <CheckoutHeaderContainer>\n          <HeaderBlock>\n            <span>Product</span>\n          </HeaderBlock>\n          <HeaderBlock>\n            <span>Description</span>\n          </HeaderBlock>\n          <HeaderBlock>\n            <span>Quantity</span>\n          </HeaderBlock>\n          <HeaderBlock>\n            <span>Price</span>\n          </HeaderBlock>\n          <HeaderBlock>\n            <span>Remove</span>\n          </HeaderBlock>\n        </CheckoutHeaderContainer>\n        <AnimatePresence>\n          {cartItems.map((cartItem, id) => (\n            <CheckoutItem key={id} cartItem={cartItem} />\n          ))}\n        </AnimatePresence>\n        <Line />\n        <Total>\n          <span>TOTAL: {total} $</span>\n        </Total>\n        <TestWarningContainer>\n          *Please use the following credit card for payments in order to test*\n          <br />\n          4242 4242 4242 4242 - Exp: 01/26 - CVV: 123\n        </TestWarningContainer>\n        <StripeCheckoutButton price={total} />\n      </Suspense>\n    </CheckoutPageContainer>\n  );\n};\n\nexport default CheckoutPage;\n","import { useRef } from 'react';\nimport { useIsomorphicLayoutEffect } from './use-isomorphic-effect.mjs';\n\nfunction useIsMounted() {\n    var isMounted = useRef(false);\n    useIsomorphicLayoutEffect(function () {\n        isMounted.current = true;\n        return function () {\n            isMounted.current = false;\n        };\n    }, []);\n    return isMounted;\n}\n\nexport { useIsMounted };\n","import { __values } from 'tslib';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { useId } from '../../utils/use-id.mjs';\n\nvar PresenceChild = function (_a) {\n    var children = _a.children, initial = _a.initial, isPresent = _a.isPresent, onExitComplete = _a.onExitComplete, custom = _a.custom, presenceAffectsLayout = _a.presenceAffectsLayout;\n    var presenceChildren = useConstant(newChildrenMap);\n    var id = useId();\n    var context = useMemo(function () { return ({\n        id: id,\n        initial: initial,\n        isPresent: isPresent,\n        custom: custom,\n        onExitComplete: function (childId) {\n            var e_1, _a;\n            presenceChildren.set(childId, true);\n            try {\n                for (var _b = __values(presenceChildren.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\n                    var isComplete = _c.value;\n                    if (!isComplete)\n                        return; // can stop searching when any is incomplete\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n            onExitComplete === null || onExitComplete === void 0 ? void 0 : onExitComplete();\n        },\n        register: function (childId) {\n            presenceChildren.set(childId, false);\n            return function () { return presenceChildren.delete(childId); };\n        },\n    }); }, \n    /**\n     * If the presence of a child affects the layout of the components around it,\n     * we want to make a new context value to ensure they get re-rendered\n     * so they can detect that layout change.\n     */\n    presenceAffectsLayout ? undefined : [isPresent]);\n    useMemo(function () {\n        presenceChildren.forEach(function (_, key) { return presenceChildren.set(key, false); });\n    }, [isPresent]);\n    /**\n     * If there's no `motion` components to fire exit animations, we want to remove this\n     * component immediately.\n     */\n    React.useEffect(function () {\n        !isPresent && !presenceChildren.size && (onExitComplete === null || onExitComplete === void 0 ? void 0 : onExitComplete());\n    }, [isPresent]);\n    return (React.createElement(PresenceContext.Provider, { value: context }, children));\n};\nfunction newChildrenMap() {\n    return new Map();\n}\n\nexport { PresenceChild };\n","import { __read, __spreadArray } from 'tslib';\nimport * as React from 'react';\nimport { useContext, useRef, cloneElement, Children, isValidElement } from 'react';\nimport { useForceUpdate } from '../../utils/use-force-update.mjs';\nimport { useIsMounted } from '../../utils/use-is-mounted.mjs';\nimport { PresenceChild } from './PresenceChild.mjs';\nimport { LayoutGroupContext } from '../../context/LayoutGroupContext.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { useUnmountEffect } from '../../utils/use-unmount-effect.mjs';\n\nvar getChildKey = function (child) { return child.key || \"\"; };\nvar isDev = process.env.NODE_ENV !== \"production\";\nfunction updateChildLookup(children, allChildren) {\n    var seenChildren = isDev ? new Set() : null;\n    children.forEach(function (child) {\n        var key = getChildKey(child);\n        if (isDev && seenChildren && seenChildren.has(key)) {\n            console.warn(\"Children of AnimatePresence require unique keys. \\\"\".concat(key, \"\\\" is a duplicate.\"));\n            seenChildren.add(key);\n        }\n        allChildren.set(key, child);\n    });\n}\nfunction onlyElements(children) {\n    var filtered = [];\n    // We use forEach here instead of map as map mutates the component key by preprending `.$`\n    Children.forEach(children, function (child) {\n        if (isValidElement(child))\n            filtered.push(child);\n    });\n    return filtered;\n}\n/**\n * `AnimatePresence` enables the animation of components that have been removed from the tree.\n *\n * When adding/removing more than a single child, every child **must** be given a unique `key` prop.\n *\n * Any `motion` components that have an `exit` property defined will animate out when removed from\n * the tree.\n *\n * ```jsx\n * import { motion, AnimatePresence } from 'framer-motion'\n *\n * export const Items = ({ items }) => (\n *   <AnimatePresence>\n *     {items.map(item => (\n *       <motion.div\n *         key={item.id}\n *         initial={{ opacity: 0 }}\n *         animate={{ opacity: 1 }}\n *         exit={{ opacity: 0 }}\n *       />\n *     ))}\n *   </AnimatePresence>\n * )\n * ```\n *\n * You can sequence exit animations throughout a tree using variants.\n *\n * If a child contains multiple `motion` components with `exit` props, it will only unmount the child\n * once all `motion` components have finished animating out. Likewise, any components using\n * `usePresence` all need to call `safeToRemove`.\n *\n * @public\n */\nvar AnimatePresence = function (_a) {\n    var children = _a.children, custom = _a.custom, _b = _a.initial, initial = _b === void 0 ? true : _b, onExitComplete = _a.onExitComplete, exitBeforeEnter = _a.exitBeforeEnter, _c = _a.presenceAffectsLayout, presenceAffectsLayout = _c === void 0 ? true : _c;\n    // We want to force a re-render once all exiting animations have finished. We\n    // either use a local forceRender function, or one from a parent context if it exists.\n    var _d = __read(useForceUpdate(), 1), forceRender = _d[0];\n    var forceRenderLayoutGroup = useContext(LayoutGroupContext).forceRender;\n    if (forceRenderLayoutGroup)\n        forceRender = forceRenderLayoutGroup;\n    var isMounted = useIsMounted();\n    // Filter out any children that aren't ReactElements. We can only track ReactElements with a props.key\n    var filteredChildren = onlyElements(children);\n    var childrenToRender = filteredChildren;\n    var exiting = new Set();\n    // Keep a living record of the children we're actually rendering so we\n    // can diff to figure out which are entering and exiting\n    var presentChildren = useRef(childrenToRender);\n    // A lookup table to quickly reference components by key\n    var allChildren = useRef(new Map()).current;\n    // If this is the initial component render, just deal with logic surrounding whether\n    // we play onMount animations or not.\n    var isInitialRender = useRef(true);\n    useIsomorphicLayoutEffect(function () {\n        isInitialRender.current = false;\n        updateChildLookup(filteredChildren, allChildren);\n        presentChildren.current = childrenToRender;\n    });\n    useUnmountEffect(function () {\n        isInitialRender.current = true;\n        allChildren.clear();\n        exiting.clear();\n    });\n    if (isInitialRender.current) {\n        return (React.createElement(React.Fragment, null, childrenToRender.map(function (child) { return (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: true, initial: initial ? undefined : false, presenceAffectsLayout: presenceAffectsLayout }, child)); })));\n    }\n    // If this is a subsequent render, deal with entering and exiting children\n    childrenToRender = __spreadArray([], __read(childrenToRender), false);\n    // Diff the keys of the currently-present and target children to update our\n    // exiting list.\n    var presentKeys = presentChildren.current.map(getChildKey);\n    var targetKeys = filteredChildren.map(getChildKey);\n    // Diff the present children with our target children and mark those that are exiting\n    var numPresent = presentKeys.length;\n    for (var i = 0; i < numPresent; i++) {\n        var key = presentKeys[i];\n        if (targetKeys.indexOf(key) === -1) {\n            exiting.add(key);\n        }\n    }\n    // If we currently have exiting children, and we're deferring rendering incoming children\n    // until after all current children have exiting, empty the childrenToRender array\n    if (exitBeforeEnter && exiting.size) {\n        childrenToRender = [];\n    }\n    // Loop through all currently exiting components and clone them to overwrite `animate`\n    // with any `exit` prop they might have defined.\n    exiting.forEach(function (key) {\n        // If this component is actually entering again, early return\n        if (targetKeys.indexOf(key) !== -1)\n            return;\n        var child = allChildren.get(key);\n        if (!child)\n            return;\n        var insertionIndex = presentKeys.indexOf(key);\n        var onExit = function () {\n            allChildren.delete(key);\n            exiting.delete(key);\n            // Remove this child from the present children\n            var removeIndex = presentChildren.current.findIndex(function (presentChild) { return presentChild.key === key; });\n            presentChildren.current.splice(removeIndex, 1);\n            // Defer re-rendering until all exiting children have indeed left\n            if (!exiting.size) {\n                presentChildren.current = filteredChildren;\n                if (isMounted.current === false)\n                    return;\n                forceRender();\n                onExitComplete && onExitComplete();\n            }\n        };\n        childrenToRender.splice(insertionIndex, 0, React.createElement(PresenceChild, { key: getChildKey(child), isPresent: false, onExitComplete: onExit, custom: custom, presenceAffectsLayout: presenceAffectsLayout }, child));\n    });\n    // Add `MotionContext` even to children that don't need it to ensure we're rendering\n    // the same tree between renders\n    childrenToRender = childrenToRender.map(function (child) {\n        var key = child.key;\n        return exiting.has(key) ? (child) : (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: true, presenceAffectsLayout: presenceAffectsLayout }, child));\n    });\n    if (process.env.NODE_ENV !== \"production\" &&\n        exitBeforeEnter &&\n        childrenToRender.length > 1) {\n        console.warn(\"You're attempting to animate multiple children within AnimatePresence, but its exitBeforeEnter prop is set to true. This will lead to odd visual behaviour.\");\n    }\n    return (React.createElement(React.Fragment, null, exiting.size\n        ? childrenToRender\n        : childrenToRender.map(function (child) { return cloneElement(child); })));\n};\n\nexport { AnimatePresence };\n","import { __read } from 'tslib';\nimport sync from 'framesync';\nimport { useState, useCallback } from 'react';\nimport { useIsMounted } from './use-is-mounted.mjs';\n\nfunction useForceUpdate() {\n    var isMounted = useIsMounted();\n    var _a = __read(useState(0), 2), forcedRenderCount = _a[0], setForcedRenderCount = _a[1];\n    var forceRender = useCallback(function () {\n        isMounted.current && setForcedRenderCount(forcedRenderCount + 1);\n    }, [forcedRenderCount]);\n    /**\n     * Defer this to the end of the next animation frame in case there are multiple\n     * synchronous calls.\n     */\n    var deferredForceRender = useCallback(function () { return sync.postRender(forceRender); }, [forceRender]);\n    return [deferredForceRender, forcedRenderCount];\n}\n\nexport { useForceUpdate };\n","import { createContext } from 'react';\n\n/**\n * @internal\n */\nvar LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nvar PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","var isBrowser = typeof window !== \"undefined\";\n\nexport { isBrowser };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    var ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","import { useConstant } from './use-constant.mjs';\n\nvar counter = 0;\nvar incrementId = function () { return counter++; };\nvar useId = function () { return useConstant(incrementId); };\n/**\n * Ideally we'd use the following code to support React 18 optionally.\n * But this fairly fails in Webpack (otherwise treeshaking wouldn't work at all).\n * Need to come up with a different way of figuring this out.\n */\n// export const useId = (React as any).useId\n//     ? (React as any).useId\n//     : () => useConstant(incrementId)\n\nexport { useId };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nvar useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { useEffect } from 'react';\n\nfunction useUnmountEffect(callback) {\n    return useEffect(function () { return function () { return callback(); }; }, []);\n}\n\nexport { useUnmountEffect };\n","const defaultTimestep = (1 / 60) * 1000;\nconst getCurrentTime = typeof performance !== \"undefined\"\n    ? () => performance.now()\n    : () => Date.now();\nconst onNextFrame = typeof window !== \"undefined\"\n    ? (callback) => window.requestAnimationFrame(callback)\n    : (callback) => setTimeout(() => callback(getCurrentTime()), defaultTimestep);\n\nexport { defaultTimestep, onNextFrame };\n","import { onNextFrame, defaultTimestep } from './on-next-frame.mjs';\nimport { createRenderStep } from './create-render-step.mjs';\n\nconst maxElapsed = 40;\nlet useDefaultElapsed = true;\nlet runNextFrame = false;\nlet isProcessing = false;\nconst frame = {\n    delta: 0,\n    timestamp: 0,\n};\nconst stepsOrder = [\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst steps = stepsOrder.reduce((acc, key) => {\n    acc[key] = createRenderStep(() => (runNextFrame = true));\n    return acc;\n}, {});\nconst sync = stepsOrder.reduce((acc, key) => {\n    const step = steps[key];\n    acc[key] = (process, keepAlive = false, immediate = false) => {\n        if (!runNextFrame)\n            startLoop();\n        return step.schedule(process, keepAlive, immediate);\n    };\n    return acc;\n}, {});\nconst cancelSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = steps[key].cancel;\n    return acc;\n}, {});\nconst flushSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = () => steps[key].process(frame);\n    return acc;\n}, {});\nconst processStep = (stepId) => steps[stepId].process(frame);\nconst processFrame = (timestamp) => {\n    runNextFrame = false;\n    frame.delta = useDefaultElapsed\n        ? defaultTimestep\n        : Math.max(Math.min(timestamp - frame.timestamp, maxElapsed), 1);\n    frame.timestamp = timestamp;\n    isProcessing = true;\n    stepsOrder.forEach(processStep);\n    isProcessing = false;\n    if (runNextFrame) {\n        useDefaultElapsed = false;\n        onNextFrame(processFrame);\n    }\n};\nconst startLoop = () => {\n    runNextFrame = true;\n    useDefaultElapsed = true;\n    if (!isProcessing)\n        onNextFrame(processFrame);\n};\nconst getFrameData = () => frame;\n\nexport default sync;\nexport { cancelSync, flushSync, getFrameData };\n","function createRenderStep(runNextFrame) {\n    let toRun = [];\n    let toRunNextFrame = [];\n    let numToRun = 0;\n    let isProcessing = false;\n    let flushNextFrame = false;\n    const toKeepAlive = new WeakSet();\n    const step = {\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const buffer = addToCurrentFrame ? toRun : toRunNextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (buffer.indexOf(callback) === -1) {\n                buffer.push(callback);\n                if (addToCurrentFrame && isProcessing)\n                    numToRun = toRun.length;\n            }\n            return callback;\n        },\n        cancel: (callback) => {\n            const index = toRunNextFrame.indexOf(callback);\n            if (index !== -1)\n                toRunNextFrame.splice(index, 1);\n            toKeepAlive.delete(callback);\n        },\n        process: (frameData) => {\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [toRun, toRunNextFrame] = [toRunNextFrame, toRun];\n            toRunNextFrame.length = 0;\n            numToRun = toRun.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = toRun[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n"],"names":["CheckoutPageContainer","styled","CheckoutHeaderContainer","HeaderBlock","Total","TestWarningContainer","Line","CheckoutItem","lazy","StripeCheckoutButton","cartItems","useSelector","selectCartItems","total","selectCartTotal","Suspense","fallback","AnimatePresence","map","cartItem","id","price","useIsMounted","isMounted","useRef","useIsomorphicLayoutEffect","current","PresenceChild","_a","children","initial","isPresent","onExitComplete","custom","presenceAffectsLayout","presenceChildren","useConstant","newChildrenMap","useId","context","useMemo","childId","e_1","set","_b","__values","values","_c","next","done","value","e_1_1","error","return","call","register","delete","undefined","forEach","_","key","React","size","PresenceContext","Map","getChildKey","child","exitBeforeEnter","_d","__read","useState","forcedRenderCount","setForcedRenderCount","forceRender","useCallback","sync","useForceUpdate","forceRenderLayoutGroup","useContext","LayoutGroupContext","filteredChildren","filtered","Children","isValidElement","push","onlyElements","childrenToRender","exiting","Set","presentChildren","allChildren","isInitialRender","updateChildLookup","useUnmountEffect","clear","__spreadArray","presentKeys","targetKeys","numPresent","length","i","indexOf","add","get","insertionIndex","splice","removeIndex","findIndex","presentChild","has","cloneElement","createContext","isBrowser","window","init","ref","counter","incrementId","useLayoutEffect","useEffect","callback","defaultTimestep","getCurrentTime","performance","now","Date","onNextFrame","requestAnimationFrame","setTimeout","useDefaultElapsed","runNextFrame","isProcessing","frame","delta","timestamp","stepsOrder","steps","reduce","acc","toRun","toRunNextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","addToCurrentFrame","buffer","cancel","index","process","frameData","createRenderStep","keepAlive","immediate","startLoop","cancelSync","flushSync","processStep","stepId","processFrame","Math","max","min","getFrameData"],"sourceRoot":""}